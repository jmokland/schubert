# Hilbert polynomial and Todd class of projective 3-space P^3.

proj(3,h,all): factor(chi(o(n*h)));
Ph[toddclass_];
#-------------------------------------------------------------------------
# Generation of formulas:

DIM:=4:
A:=bundle(2,c):        # a bundle with Chern classes c1,c2 and rank 2
B:=bundle(3,d):        # a bundle with Chern classes d1,d2,d3 and rank 3
chern(A);
segre(B);
chern(A&@B);           # The Chern class of the tensor product
chern(3,symm(3,dual(A)));
segre(2,Hom(wedge(2,A),wedge(2,B)));
#-------------------------------------------------------------------------
## Grassmannian of lines in P3:

grass(2,4,b,all): 
chi(Gb,Symm(n,Qb));
chi(Gb,o(n*b1));

## This should be a quadric in P5:

proj(5,H,all): chi(o(n*H)-o((n-2)*H));
#-------------------------------------------------------------------------
# Lines on a quintic threefold.  This is the top Chern class of the 
# 5th symmetric power of the universal quotient bundle on the Grassmannian
# of lines.

grass(2,5,c):        # Lines in P^4. 
B:=symm(5,Qc):       # Qc is the rank 2 quotient bundle, B its 5th 
                     # symmetric power.
c6:=chern(rank(B),B):# the 6th Chern class of this rank 6 bundle.
integral(c6);
#-------------------------------------------------------------------------
# Conics on a quintic threefold. This is the top Chern class of the 
# quotient of the 5th symmetric power of the universal quotient on the
# Grassmannian of 2 planes in P^5 by the subbundle of quintic containing the 
# tautological conic over the moduli space of conics.

grass(3,5,c):         # 2-planes in P^4.  
B:=Symm(2,Qc):        # The bundle of conics in the 2-plane. 
Proj(X,dual(B),z):    # X is the projective bundle of all conics. 
A:=Symm(5,Qc)-Symm(3,Qc)&@o(-z):  # The rank 11 bundle of quintics 
                                  # restricted to the universal conic. 
c11:=chern(rank(A),A):# its top Chern class.
lowerstar(X,c11):     # push down to G(3,5).
integral(Gc,%);       # and integrate there.
#-------------------------------------------------------------------------
## Count the number of space conics intersecting 8 given lines

grass(3,4,d,all):
Proj(f,dual(symm(2,Qd)),e):
integral(Gd,lowerstar(f,(2*d1+e)^8));
#-------------------------------------------------------------------------
# Conics tangent to 5 plane conics.  Each tangency is a degree 6
# condition on the P^5 of conics; but it contains the degenerate conics with  
# multiplicity 2.

proj(5,H,all):             # The P^5 of conics.  Tangent bundle needed for 
                           # blowup.
proj(2,h,all):             # The P^2 of double lines
morphism(f,Ph,PH,[H=2*h]): # The Veronese embedding
blowup(f):                 # Construct Bf, the space of complete conics
integral((6*H-2*Ef)^5);    # Ef is the exceptional divisor.
#-------------------------------------------------------------------------
# Adjunction formula.  Complete intersection in P^7.

proj(7,h,tan):             # P^7.  Tangentbundle needed.
B:=o(n1)+o(n2)+o(n3):      # bundle of triples of forms, of degrees n1,n2,n3.
bundlesection(Z,B):        # Z is the complete intersection
cotbun:=-tangentbundle(Z): # the cotangent bundle
chern(1,cotbun);           # the Chern class of the canonical bundle.
#-------------------------------------------------------------------------
# Euler characteristic of Horrocks-Mumford bundle

proj(4,h,tang):            # need tangentbundle for chi
F:=sheaf(2,[5*h,10*h^2]):  # defines the Horrocks-Mumford bundle
chi(F&@o(n*h));            # computes chi of its twists
#-------------------------------------------------------------------------
# Cohomology of the universal line in P^3.  Done in two ways -  
# LL is the line as a section of a bundle on P3 x G(2,4), whereas Tf is 
# P(universal 2-bundle on G). 

proj(3,h,all):             # Ph=P^3
grass(2,4,b,all):          # Gb=G(2,4)
R:=4-Qb:                   # the universal subbundle on G(2,4)
productvariety(PG,Ph,Gb,pp,pg): # PG=P3 x G(2,4)
bundlesection(LL,dual(R)&@o(h)):# universal line
lis:=NULL: for A in monomials(LL,5) do 
  if integral(LL,A) <> 0 then lis:=lis,A=integral(LL,A) fi od: 
lis;

setvariety(Gb):                  # make G(2,4) currentvariety
Proj(f,Qb,h,tan):          # P(universal quotient)
totalspace(f,Gb,tan):
lis:=NULL: for A in monomials(Tf,5) do 
  if integral(Tf,A) <> 0 then lis:=lis,A=integral(Tf,A) fi od:
lis;

expand(chi(LL,o(m*h+n*b1))-chi(Tf,o(m*h+n*b1))); # chi must be the same
#-------------------------------------------------------------------------
# We compute the Hilbert polynomial of a space curve in three ways,
# using the direct image and chi on P^3, and directly on C. We quote
# the name 'i' of the inclusion morphism, in case i has been assigned
# a value earlier in the session.

proj(3,h,all):
curve(C,g,p):
morphism('i',C,Ph,[d*p]):
lowerstar(i,1);             # class of C in H*(P^3)
lowershriek(i,o(n*d*p)):    # Direct image of o_C(n)
chi(Ph,%);
oo:=lowershriek(i,1): setvariety(Ph): chi(oo&@o(n*h));
chi(C,i&^*(o(n*h)));
#-------------------------------------------------------------------------
# Here we test the compatibility between bundlesection
# and koszul. Use grass(2,5,c) as the ambient space, and
# consider a regular section of the rank-3 bundle symm(2,Qc).

grass(2,5,c,all):
bundlesection(Z,symm(2,Qc)):# Z is the zero scheme of a section of symm(2,Qc)
# We may compute the Hilbert polynomial of Z in two ways:
setvariety(Gc): chi(o(n*c1)&@koszul(symm(2,dual(Qc))));
setvariety(Z): chi(o(n*c1));
# The following should be zero:
difference:=lowershriek(iZ,1)-koszul(dual(symm(2,(Qc))));

# We check that actually it *is* zero modulo relations:

grobnerbasis(Gc):
normalform(Gc,difference);
#-------------------------------------------------------------------------
# Riemann-Roch formulas.
# Line bundle O(D) on a threefold.

variety(X,dim=3,tan=sheaf(3,[-K,c2,c3])): # traditionally, -K is 
                                          # used instead of c1
chi(o(D));
#-------------------------------------------------------------------------
# number of bitangents to a plane curve

proj(2,h,all):             # the dual projective plane
proj(2,j,all):             # the projective plane
bundlesection(C,o(d*j)):   # define a plane curve of degree d
morphism(f,C,Ph,[(d-1)*j]):# the Gauss map to the dual plane
multiplepoint(f,2)/2:      # double points are bitangents or flexes
                           # correct for flexes.  Flexes can of 
                           # course be calculated automatically.
bitangents:=expand(integral(C,%)-(3*d*(d-2)));
subs(d=4,%);
#-------------------------------------------------------------------------
# blowup 6 points in P2. Cubics through the 6 points give a linear
# system of degree 3 (generically an embedding in P3).

proj(2,h):
blowuppoints(Ph,6,e):
integral(Be,(3*h-e1-e2-e3-e4-e5-e6)^2);
#-------------------------------------------------------------------------
# betti numbers of a product of grassmannians

grass(2,5,a,bas): grass(3,7,b,bas): # make two grassmannians
productvariety(V,Ga,Gb):            # their product V
betti(V);                           # betti numbers of V

#-------------------------------------------------------------------------
# Discrepancy of a quotient singularity

wproj(X,x,[1,1,3],Pic=[H=x3],tan):   # P^2(1,1,3); quotient sing. at (0,0,1)
insertedge(Y,X,Ee,[0,1],Pic=[H=x3,e=Ee],tan):             # blow up the point
ye:=Y[edgevalues_]:
discrepancy:=subs(x1=ye[1],x2=ye[2],
                  chern(1,tangentbundle(X))-chern(1,tangentbundle(Y)));

quit;
